---
apiVersion: v1
kind: Secret
metadata:
  name: "postgres"
stringData:
  database-name: "django"
  database-password: "not-so-secure-password"
  database-user: "django"
---
apiVersion: v1
kind: Service
metadata:
  name: "postgres"
spec:
  ports:
    - name: postgresql
      nodePort: 0
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    name: "postgres"
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "postgres"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: "postgres"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: "postgres"
    spec:
      containers:
        - image: "postgres:9.6.24"
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: "postgres"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: "postgres"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: "postgres"

          imagePullPolicy: IfNotPresent
          name: postgresql
          ports:
            - containerPort: 5432
              protocol: TCP
          resources:
            limits:
              memory: "512Mi"
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: "postgres-data"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - emptyDir:
            medium: ""
          name: "postgres-data"
status: {}
